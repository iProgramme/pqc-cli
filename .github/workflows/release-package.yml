name: Release

on:
  push:
    paths:
      - 'package.json'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Read package.json
      id: package
      run: |
        echo "::set-output name=version::v$(jq -r .version package.json)"
        echo "::set-output name=commit_message::$(git log --format=%B -n 1 $GITHUB_SHA)"

    - name: Check if version changed
      id: versionchanged
      run: |
        PREVIOUS_VERSION="${{ env.PREVIOUS_VERSION }}"
          CURRENT_VERSION=${{ steps.package.outputs.version }}
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version has changed. Proceeding with release..."
            echo "CURRENT_VERSION" >> $GITHUB_ENV
          else
            echo "Version has not changed. Skipping release..."
            exit 0  # This exits the step with success
          fi
          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.package.outputs.version }}
        release_name: ${{ steps.package.outputs.version }}
        body: ${{ steps.package.outputs.commit_message }}
